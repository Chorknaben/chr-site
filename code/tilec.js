// Generated by CoffeeScript 1.7.1
var Tile,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Tile = (function() {
  function Tile(tileid, _const) {
    this.tileid = tileid;
    this["const"] = _const != null ? _const : Constants;
    this.onClick = __bind(this.onClick, this);
    this.core = window.core;
    this.interval = null;
    this.scaleCount = 0;
    this.headerImg = $("#header-img");
  }

  Tile.prototype.onClick = function() {
    console.log("Tile Click: id=" + this.tileid);
    if (this.tileid > 7) {
      this.tileid -= 7;
    }
    console.log(this["const"].tileResolver);
    return this.load(this["const"].tileResolver[this.tileid - 1][0], this["const"].tileResolver[this.tileid - 1][1]);
  };

  Tile.prototype.load = function(prettyWhat, urlWhat) {
    console.log(urlWhat);
    window.nav.by(this["const"].METHODS.NAME, urlWhat);
    return $("#result").load("content/" + urlWhat + ".html", (function(_this) {
      return function() {
        window.location.hash = "!/" + urlWhat;
        _this.setLoadingScreen(true);
        $(_this.core.state["blurredbg"]).appendTo("#blurbg");
        $(".scrolled").attr("id", urlWhat);
        _this.core.state["currentPage"] = prettyWhat;
        _this.core.state["currentURL"] = urlWhat;
        _this.core.state["tileid"] = _this.tileid;
        _this.core.registerTaker("pageChanged", true);
        return $.getScript("content/" + urlWhat + ".js").done(function() {
          _this.core.state["childPage"].onGenerateMarkup();
          _this.core.state["childPage"].onLoad();
          _this.setLoadingScreen(false);
          $("#result").css({
            display: "initial"
          });
          return $(".tilecontainer").css({
            display: "none"
          });
        });
      };
    })(this));
  };

  Tile.prototype.setLoadingScreen = function(toggle) {
    if (toggle) {
      return $("#loading-screen").css({
        display: "block"
      });
    } else {
      return $("#loading-screen").css({
        display: "none"
      });
    }
  };

  return Tile;

})();

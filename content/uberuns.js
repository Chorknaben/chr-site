// Generated by CoffeeScript 1.7.1
var ExperienceHandler, ImageCarusel, expH;

ImageCarusel = (function() {
  function ImageCarusel() {}

  ImageCarusel.prototype.contructor = function(imagediv) {
    this.imagediv = imagediv;
    this.left = $(this.imagediv).find(".left");
    this.main = $(this.imagediv).find(".main");
    return this.right = $(this.imagediv).find(".right");
  };

  ImageCarusel.prototype.load = function() {
    var i, _i, _len, _ref, _results;
    _ref = [this.left, this.main, this.right];
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      i = _ref[_i];
      _results.push($(i).bind("load", function() {
        return this.fadeIn();
      }));
    }
    return _results;
  };

  ImageCarusel.prototype.click_left = function(event) {};

  ImageCarusel.prototype.click_middle = function(event) {};

  ImageCarusel.prototype.click_right = function(event) {};

  return ImageCarusel;

})();

ExperienceHandler = (function() {
  function ExperienceHandler() {
    this.waypoints = $(".waypoint");
    this.c = window.core;
    this.w = $(window);
    this.c.state["eingerastet"] = false;
    this.topOnRast = -1;
  }

  ExperienceHandler.prototype.scroll = function() {
    var fstDelta, fstEdge, stackFst, stackFstB, stackFstC, stackHgt, stackSnd, stackSndI;
    stackFst = $(this.waypoints[0]);
    stackFstB = stackFst.children('.wbody');
    stackFstC = stackFst.children('.connector');
    fstEdge = stackFstB.offset().top + stackFstB.height();
    stackHgt = 279 + stackFstB.height();
    stackSnd = $(this.waypoints[1]);
    stackSndI = stackSnd.children('img');
    fstDelta = stackSndI.offset().top - fstEdge;
    if (this.w.scrollTop() > this.w.height()) {
      stackFst.css({
        position: "fixed"
      });
    }
    stackFstC.css({
      height: stackSndI.offset().top - stackFstC.offset().top + 8
    });
    if (fstDelta <= 0) {
      stackFst.css({
        opacity: 1 - Math.abs(fstDelta) * (1 / stackHgt)
      });
    }
    if (stackFstC.height() === 0 && !this.c.state["eingerastet"]) {
      this.c.state["eingerastet"] = true;
      stackSnd.css({
        position: 'fixed',
        top: '150px'
      });
      this.topOnRast = $(window).scrollTop();
    }
    if ($(window).scrollTop() < this.topOnRast && this.c.state["eingerastet"]) {
      this.c.state["eingerastet"] = false;
      return stackSnd.css({
        position: 'absolute',
        top: '714px'
      });
    }
  };

  return ExperienceHandler;

})();

$("body").on({
  mousewheel: function(event) {
    if (event.originalEvent.wheelDelta >= 0 && $(window).scrollTop() < window.core.state["scrolloff"]) {
      return $("#waypoint-0").css({
        position: "absolute"
      });
    }
  }
});

expH = new ExperienceHandler();

window.core.registerScrollHandler("waypointfixer", function() {
  return expH.scroll();
});

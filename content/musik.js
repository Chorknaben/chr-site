// Generated by CoffeeScript 1.11.1
var Musik,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Musik = (function(superClass) {
  extend(Musik, superClass);

  function Musik() {
    Musik.__super__.constructor.call(this);
    this.core = window.core;
    this.core.requestFunction("ContentViewer.requestInstance", (function(_this) {
      return function(cView) {
        return _this.contentViewer = cView();
      };
    })(this));
  }

  Musik.prototype.acquireLoadingLock = function() {
    return true;
  };

  Musik.prototype.onLoad = function() {
    var attr;
    this.core.setMetaDesc("Hauptsache: Musik.", "Musik");
    if (window.ie) {
      attr = $(".cd img").attr("src");
      $(".cd img").attr("src", attr + ".png");
    }
    return $.when($.getScript("/code/audio.min.js"), $.Deferred(function(deferred) {
      return $(deferred.resolve);
    })).done((function(_this) {
      return function() {
        return audiojs.events.ready(function() {
          _this.audi = audiojs.createAll()[0];
          return window.core.release();
        });
      };
    })(this));
  };

  Musik.prototype.onDOMVisible = function() {
    return $.ajax({
      url: "/data/json/musik.json"
    }).done((function(_this) {
      return function(json) {
        var file, i, len, ref;
        ref = json.musik;
        for (i = 0, len = ref.length; i < len; i++) {
          file = ref[i];
          _this.addMusicFile(file.displayname, file.pathname);
        }
        _this.clickEvents(_this.audi);
        return _this.selectFirst(_this.audi);
      };
    })(this));
  };

  Musik.prototype.addMusicFile = function(display, path) {
    var parent;
    parent = $(".playlist");
    return parent.append($("<li>").attr("data-src", path).append(display));
  };

  Musik.prototype.selectFirst = function(audiojs) {
    var first;
    first = $(".playlist li").first();
    first.addClass("playing");
    return audiojs.load("/data/musik/" + first.attr("data-src"));
  };

  Musik.prototype.clickEvents = function(audiojs) {
    return $(".playlist li").click(function(e) {
      e.preventDefault();
      $(this).addClass('playing').siblings().removeClass('playing');
      audiojs.load("/data/musik/" + $(this).attr("data-src"));
      return audiojs.play();
    });
  };

  return Musik;

})(ChildPage);

window.core.insertChildPage(new Musik());

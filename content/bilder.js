// Generated by CoffeeScript 1.7.1
var Bilder,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Bilder = (function(_super) {
  __extends(Bilder, _super);

  function Bilder() {
    this.adjustPos = __bind(this.adjustPos, this);
    this.imageViewerClose = __bind(this.imageViewerClose, this);
    this.imageViewerKeyPress = __bind(this.imageViewerKeyPress, this);
    this.fadeOutInfo = __bind(this.fadeOutInfo, this);
    this.imageViewerOpen = __bind(this.imageViewerOpen, this);
    this.onLoad = __bind(this.onLoad, this);
    Bilder.__super__.constructor.call(this);
    this.catCount = 0;
    this.currentScrollPos = -1;
    this.core = window.core;
    this.contentViewer = null;
    this.core.requestFunction("ContentViewer.requestInstance", (function(_this) {
      return function(cView) {
        return _this.contentViewer = cView();
      };
    })(this));
    this.timeout = null;
    this.minImage = 1;
    this.maxImage = 0;
  }

  Bilder.prototype.notifyHashChange = function(newHash) {
    var chapter, chapterID, el, firstChapt, id, image, rightElem, rightPt;
    if (newHash.indexOf("/element/") === 0) {
      id = parseInt(newHash.substr(9, newHash.length));
      el = $(".img-image").eq(id - 1);
      el.addClass("loading");
      image = $("<img>").attr("src", "/images/real/" + id).load((function(_this) {
        return function() {
          el.removeClass("loading");
          return _this.imageViewerOpen(image, true);
        };
      })(this));
    }
    if (newHash.indexOf("/kategorie/") === 0) {
      rightElem = this.findRightMost();
      rightPt = rightElem.offset().left + rightElem.width();
      firstChapt = $(".image-container").children().eq(0).offset();
      chapterID = newHash.substr(11, newHash.length);
      chapter = $(".img-chapter").eq(chapterID);
      return this.contentViewer.open({
        left: function() {
          return firstChapt.left;
        },
        top: function() {
          return firstChapt.top;
        },
        right: function() {
          return $(window).width() - rightPt + 30;
        },
        height: function() {
          return "100%";
        },
        scrollTo: chapter,
        title: "WILLKOMMEN",
        caption: "auf unserer Bilder Seite!",
        revertHash: "#!/bilder",
        content: "<p>Prosciutto sirloin filet mignon pancetta. Rump frankfurter tail, fatback cow tenderloin ham hock. Strip steak meatball beef shank doner jowl turducken bacon t-bone biltong salami. Prosciutto meatball pancetta filet mignon brisket ham jowl sirloin. Biltong ground round brisket, sirloin tail corned beef pig pork chop ball tip shoulder beef ribs frankfurter beef pork salami.</p>"
      });
    }
  };

  Bilder.prototype.onLoad = function() {
    return $.ajax({
      url: "test.json"
    }).done((function(_this) {
      return function(tree) {
        var c, imgptr, _i, _j, _len, _len1, _ref;
        for (_i = 0, _len = tree.length; _i < _len; _i++) {
          c = tree[_i];
          _this.genCat(c.category.title, c.category.caption, c.category.content);
          _ref = c.category.childs;
          for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
            imgptr = _ref[_j];
            _this.genImg(imgptr[0], imgptr[1]);
            _this.maxImage++;
          }
        }
        return _this.c.release();
      };
    })(this));
  };

  Bilder.prototype.acquireLoadingLock = function() {
    return true;
  };

  Bilder.prototype.onDOMVisible = function() {
    this.adjustPos();
    return $(window).bind({
      resize: this.adjustPos
    });
  };

  Bilder.prototype.onUnloadChild = function() {
    return $(window).unbind("resize", this.adjustPos);
  };

  Bilder.prototype.imageViewerOpen = function(image, links) {
    var h, viewer;
    if (links == null) {
      links = false;
    }
    if (!$(".image-viewer").hasClass("nodisplay")) {
      $(".image-viewer img").remove();
    }
    $(".bar").removeClass("fade");
    h = location.hash;
    this.currentEl = parseInt(h.substr(h.lastIndexOf("/") + 1, h.length));
    if (links) {
      if (!(this.currentEl - 1 < this.minImage)) {
        $(".arrleft").attr("href", "#!/bilder/element/" + (this.currentEl - 1));
      }
      if (!(this.currentEl + 1 > this.maxImage)) {
        $(".arrright").attr("href", "#!/bilder/element/" + (this.currentEl + 1));
      }
    }
    $(window).on("keydown", this.imageViewerKeyPress);
    this.currentScrollPos = $(window).scrollTop();
    $(".scrolled").css({
      overflow: "hidden"
    });
    viewer = $(".image-viewer");
    $(image).addClass("link-cursor");
    $(image).click((function(_this) {
      return function() {
        return _this.imageViewerClose();
      };
    })(this));
    $(image).prependTo($(".image-viewer"));
    viewer.removeClass("nodisplay");
    $(".cross").removeClass("nodisplay");
    if ($(".image-viewer img").height() > $(window).height() - 300) {
      this.fadeOutInfo();
      return $(".image-viewer img").on("mousemove", this.fadeOutInfo);
    }
  };

  Bilder.prototype.fadeOutInfo = function() {
    clearTimeout(this.timeout);
    $(".bar").removeClass("fade");
    return this.timeout = setTimeout((function(_this) {
      return function() {
        return $(".bar").addClass("fade");
      };
    })(this), 2000);
  };

  Bilder.prototype.imageViewerKeyPress = function(ev) {
    var keyCode;
    keyCode = ev.keyCode;
    if (keyCode === 37 && this.currentEl > this.minImage) {
      location.hash = "#!/bilder/element/" + (this.currentEl - 1);
    }
    if (keyCode === 39 && this.currentEl < this.maxImage) {
      return location.hash = "#!/bilder/element/" + (this.currentEl + 1);
    }
  };

  Bilder.prototype.imageViewerClose = function() {
    $(".scrolled").css({
      overflow: "initial"
    });
    $(window).scrollTop(this.currentScrollPos);
    this.c.registerTaker("dontHandle", true);
    window.location.hash = "#!/bilder";
    $(window).off("keydown", this.imageViewerKeyPress);
    $(".image-viewer img").off("mousemove", this.fadeOutInfo);
    clearTimeout(this.timeout);
    $(".bar").removeClass("fade");
    $(".image-viewer").addClass("nodisplay");
    $(".image-viewer").children("img").remove();
    return $(".cross").addClass("nodisplay");
  };

  Bilder.prototype.adjustPos = function() {
    var delta, rightElem, rightPoint, width;
    width = $(window).width();
    rightElem = this.findRightMost();
    rightPoint = rightElem.offset().left + rightElem.width();
    delta = (width * 0.94 - rightPoint) / 2;
    return $(".image-container").css({
      "margin-left": (width * 0.06) + delta
    });
  };

  Bilder.prototype.findRightMost = function() {
    var error, firstOffset, leftIndex;
    try {
      firstOffset = $(".img-image").first().offset().top;
      leftIndex = -1;
      $(".img-image").each((function(_this) {
        return function(index, obj) {
          var $obj;
          $obj = $(obj);
          if ($obj.offset().top !== firstOffset) {
            leftIndex = index - 1;
            return false;
          }
        };
      })(this));
      if (leftIndex !== -1) {
        return $(".img-image").eq(leftIndex);
      }
      return false;
    } catch (_error) {
      error = _error;
      return false;
    }
  };

  Bilder.prototype.genCat = function(title, caption, content) {
    $(".image-container").append($("<a>").addClass("img-chapter").attr("href", "/#!/bilder/kategorie/" + this.catCount).append($("<h2>" + title + "</h2>").append($("<span>" + caption + "</span>"))));
    return this.catCount++;
  };

  Bilder.prototype.genImg = function(filePtr, caption) {
    return $(".image-container").append($("<a>").addClass("img-image").attr("href", "/#!/bilder/element/" + filePtr).append($("<img>").attr("src", "/images/thumbs/" + filePtr)).append($("<span>" + caption + "</span>")));
  };

  return Bilder;

})(ChildPage);

window.core.insertChildPage(new Bilder());
